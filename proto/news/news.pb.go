// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: proto/news/news.proto

package news

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type News struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slug          string                 `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64                  `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *News) Reset() {
	*x = News{}
	mi := &file_proto_news_news_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *News) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*News) ProtoMessage() {}

func (x *News) ProtoReflect() protoreflect.Message {
	mi := &file_proto_news_news_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use News.ProtoReflect.Descriptor instead.
func (*News) Descriptor() ([]byte, []int) {
	return file_proto_news_news_proto_rawDescGZIP(), []int{0}
}

func (x *News) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *News) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *News) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *News) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *News) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type CreateNewsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slug          string                 `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNewsRequest) Reset() {
	*x = CreateNewsRequest{}
	mi := &file_proto_news_news_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewsRequest) ProtoMessage() {}

func (x *CreateNewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_news_news_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewsRequest.ProtoReflect.Descriptor instead.
func (*CreateNewsRequest) Descriptor() ([]byte, []int) {
	return file_proto_news_news_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNewsRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *CreateNewsRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateNewsRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CreateNewsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	News          *News                  `protobuf:"bytes,1,opt,name=news,proto3" json:"news,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNewsResponse) Reset() {
	*x = CreateNewsResponse{}
	mi := &file_proto_news_news_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewsResponse) ProtoMessage() {}

func (x *CreateNewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_news_news_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewsResponse.ProtoReflect.Descriptor instead.
func (*CreateNewsResponse) Descriptor() ([]byte, []int) {
	return file_proto_news_news_proto_rawDescGZIP(), []int{2}
}

func (x *CreateNewsResponse) GetNews() *News {
	if x != nil {
		return x.News
	}
	return nil
}

func (x *CreateNewsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetNewsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slug          string                 `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNewsRequest) Reset() {
	*x = GetNewsRequest{}
	mi := &file_proto_news_news_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsRequest) ProtoMessage() {}

func (x *GetNewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_news_news_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsRequest.ProtoReflect.Descriptor instead.
func (*GetNewsRequest) Descriptor() ([]byte, []int) {
	return file_proto_news_news_proto_rawDescGZIP(), []int{3}
}

func (x *GetNewsRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type GetNewsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	News          *News                  `protobuf:"bytes,1,opt,name=news,proto3" json:"news,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNewsResponse) Reset() {
	*x = GetNewsResponse{}
	mi := &file_proto_news_news_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsResponse) ProtoMessage() {}

func (x *GetNewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_news_news_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsResponse.ProtoReflect.Descriptor instead.
func (*GetNewsResponse) Descriptor() ([]byte, []int) {
	return file_proto_news_news_proto_rawDescGZIP(), []int{4}
}

func (x *GetNewsResponse) GetNews() *News {
	if x != nil {
		return x.News
	}
	return nil
}

func (x *GetNewsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetNewsListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNewsListRequest) Reset() {
	*x = GetNewsListRequest{}
	mi := &file_proto_news_news_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsListRequest) ProtoMessage() {}

func (x *GetNewsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_news_news_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsListRequest.ProtoReflect.Descriptor instead.
func (*GetNewsListRequest) Descriptor() ([]byte, []int) {
	return file_proto_news_news_proto_rawDescGZIP(), []int{5}
}

func (x *GetNewsListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetNewsListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetNewsListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	News          []*News                `protobuf:"bytes,1,rep,name=news,proto3" json:"news,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNewsListResponse) Reset() {
	*x = GetNewsListResponse{}
	mi := &file_proto_news_news_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsListResponse) ProtoMessage() {}

func (x *GetNewsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_news_news_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsListResponse.ProtoReflect.Descriptor instead.
func (*GetNewsListResponse) Descriptor() ([]byte, []int) {
	return file_proto_news_news_proto_rawDescGZIP(), []int{6}
}

func (x *GetNewsListResponse) GetNews() []*News {
	if x != nil {
		return x.News
	}
	return nil
}

func (x *GetNewsListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetNewsListResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UpdateNewsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slug          string                 `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNewsRequest) Reset() {
	*x = UpdateNewsRequest{}
	mi := &file_proto_news_news_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNewsRequest) ProtoMessage() {}

func (x *UpdateNewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_news_news_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNewsRequest.ProtoReflect.Descriptor instead.
func (*UpdateNewsRequest) Descriptor() ([]byte, []int) {
	return file_proto_news_news_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateNewsRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *UpdateNewsRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateNewsRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type UpdateNewsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	News          *News                  `protobuf:"bytes,1,opt,name=news,proto3" json:"news,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNewsResponse) Reset() {
	*x = UpdateNewsResponse{}
	mi := &file_proto_news_news_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNewsResponse) ProtoMessage() {}

func (x *UpdateNewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_news_news_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNewsResponse.ProtoReflect.Descriptor instead.
func (*UpdateNewsResponse) Descriptor() ([]byte, []int) {
	return file_proto_news_news_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateNewsResponse) GetNews() *News {
	if x != nil {
		return x.News
	}
	return nil
}

func (x *UpdateNewsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DeleteNewsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slug          string                 `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNewsRequest) Reset() {
	*x = DeleteNewsRequest{}
	mi := &file_proto_news_news_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNewsRequest) ProtoMessage() {}

func (x *DeleteNewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_news_news_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNewsRequest.ProtoReflect.Descriptor instead.
func (*DeleteNewsRequest) Descriptor() ([]byte, []int) {
	return file_proto_news_news_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteNewsRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type DeleteNewsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNewsResponse) Reset() {
	*x = DeleteNewsResponse{}
	mi := &file_proto_news_news_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNewsResponse) ProtoMessage() {}

func (x *DeleteNewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_news_news_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNewsResponse.ProtoReflect.Descriptor instead.
func (*DeleteNewsResponse) Descriptor() ([]byte, []int) {
	return file_proto_news_news_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteNewsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteNewsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_proto_news_news_proto protoreflect.FileDescriptor

const file_proto_news_news_proto_rawDesc = "" +
	"\n" +
	"\x15proto/news/news.proto\x12\x04news\"\x88\x01\n" +
	"\x04News\x12\x12\n" +
	"\x04slug\x18\x01 \x01(\tR\x04slug\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\x03R\tupdatedAt\"W\n" +
	"\x11CreateNewsRequest\x12\x12\n" +
	"\x04slug\x18\x01 \x01(\tR\x04slug\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\"J\n" +
	"\x12CreateNewsResponse\x12\x1e\n" +
	"\x04news\x18\x01 \x01(\v2\n" +
	".news.NewsR\x04news\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"$\n" +
	"\x0eGetNewsRequest\x12\x12\n" +
	"\x04slug\x18\x01 \x01(\tR\x04slug\"G\n" +
	"\x0fGetNewsResponse\x12\x1e\n" +
	"\x04news\x18\x01 \x01(\v2\n" +
	".news.NewsR\x04news\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\">\n" +
	"\x12GetNewsListRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\"a\n" +
	"\x13GetNewsListResponse\x12\x1e\n" +
	"\x04news\x18\x01 \x03(\v2\n" +
	".news.NewsR\x04news\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"W\n" +
	"\x11UpdateNewsRequest\x12\x12\n" +
	"\x04slug\x18\x01 \x01(\tR\x04slug\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\"J\n" +
	"\x12UpdateNewsResponse\x12\x1e\n" +
	"\x04news\x18\x01 \x01(\v2\n" +
	".news.NewsR\x04news\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"'\n" +
	"\x11DeleteNewsRequest\x12\x12\n" +
	"\x04slug\x18\x01 \x01(\tR\x04slug\"D\n" +
	"\x12DeleteNewsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error2\xcc\x02\n" +
	"\vNewsService\x12?\n" +
	"\n" +
	"CreateNews\x12\x17.news.CreateNewsRequest\x1a\x18.news.CreateNewsResponse\x126\n" +
	"\aGetNews\x12\x14.news.GetNewsRequest\x1a\x15.news.GetNewsResponse\x12B\n" +
	"\vGetNewsList\x12\x18.news.GetNewsListRequest\x1a\x19.news.GetNewsListResponse\x12?\n" +
	"\n" +
	"UpdateNews\x12\x17.news.UpdateNewsRequest\x1a\x18.news.UpdateNewsResponse\x12?\n" +
	"\n" +
	"DeleteNews\x12\x17.news.DeleteNewsRequest\x1a\x18.news.DeleteNewsResponseB\x19Z\x17news-service/proto/newsb\x06proto3"

var (
	file_proto_news_news_proto_rawDescOnce sync.Once
	file_proto_news_news_proto_rawDescData []byte
)

func file_proto_news_news_proto_rawDescGZIP() []byte {
	file_proto_news_news_proto_rawDescOnce.Do(func() {
		file_proto_news_news_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_news_news_proto_rawDesc), len(file_proto_news_news_proto_rawDesc)))
	})
	return file_proto_news_news_proto_rawDescData
}

var file_proto_news_news_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_news_news_proto_goTypes = []any{
	(*News)(nil),                // 0: news.News
	(*CreateNewsRequest)(nil),   // 1: news.CreateNewsRequest
	(*CreateNewsResponse)(nil),  // 2: news.CreateNewsResponse
	(*GetNewsRequest)(nil),      // 3: news.GetNewsRequest
	(*GetNewsResponse)(nil),     // 4: news.GetNewsResponse
	(*GetNewsListRequest)(nil),  // 5: news.GetNewsListRequest
	(*GetNewsListResponse)(nil), // 6: news.GetNewsListResponse
	(*UpdateNewsRequest)(nil),   // 7: news.UpdateNewsRequest
	(*UpdateNewsResponse)(nil),  // 8: news.UpdateNewsResponse
	(*DeleteNewsRequest)(nil),   // 9: news.DeleteNewsRequest
	(*DeleteNewsResponse)(nil),  // 10: news.DeleteNewsResponse
}
var file_proto_news_news_proto_depIdxs = []int32{
	0,  // 0: news.CreateNewsResponse.news:type_name -> news.News
	0,  // 1: news.GetNewsResponse.news:type_name -> news.News
	0,  // 2: news.GetNewsListResponse.news:type_name -> news.News
	0,  // 3: news.UpdateNewsResponse.news:type_name -> news.News
	1,  // 4: news.NewsService.CreateNews:input_type -> news.CreateNewsRequest
	3,  // 5: news.NewsService.GetNews:input_type -> news.GetNewsRequest
	5,  // 6: news.NewsService.GetNewsList:input_type -> news.GetNewsListRequest
	7,  // 7: news.NewsService.UpdateNews:input_type -> news.UpdateNewsRequest
	9,  // 8: news.NewsService.DeleteNews:input_type -> news.DeleteNewsRequest
	2,  // 9: news.NewsService.CreateNews:output_type -> news.CreateNewsResponse
	4,  // 10: news.NewsService.GetNews:output_type -> news.GetNewsResponse
	6,  // 11: news.NewsService.GetNewsList:output_type -> news.GetNewsListResponse
	8,  // 12: news.NewsService.UpdateNews:output_type -> news.UpdateNewsResponse
	10, // 13: news.NewsService.DeleteNews:output_type -> news.DeleteNewsResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_proto_news_news_proto_init() }
func file_proto_news_news_proto_init() {
	if File_proto_news_news_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_news_news_proto_rawDesc), len(file_proto_news_news_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_news_news_proto_goTypes,
		DependencyIndexes: file_proto_news_news_proto_depIdxs,
		MessageInfos:      file_proto_news_news_proto_msgTypes,
	}.Build()
	File_proto_news_news_proto = out.File
	file_proto_news_news_proto_goTypes = nil
	file_proto_news_news_proto_depIdxs = nil
}
